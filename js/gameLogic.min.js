"use strict";function gridConstructor(){for(var a=1;a<=cubeCount;a++)$("#grid").append("<div id ='"+a+"'></div>"),grid[a]=new Cube(a)}function notification(a){$notificationMessage.text(a).css("opacity","1")}function clearNotification(){$notificationMessage.css("opacity","0")}function startGame(){switch(myPlayerName=$("#playerName").val(),myPlayerName=""===myPlayerName?"Player 1":myPlayerName,playType){case"single":host=!0,tl.play(),mySnake=new Snake(myPlayerName,"blue",[250,251,252],$playerOneScore),snakeFood(),$playerOneScore.css("left","50%").css("display","block"),keyListener=window.addEventListener("keydown",function(){keyTracker(event,mySnake)}),gameClock=window.setInterval(function(){mySnake.commitDirection(),mySnake.move()},gameSpeed);break;case"localMultiplayer":notification("Player 1: Directional Pad | Player 2: WASD"),host=!0,tl.play(),setTimeout(function(){clearNotification()},5e3),mySnake=new Snake(myPlayerName,"blue",[250,251,252],$playerOneScore),yourSnake=new Snake("Player 2","red",[436,437,438],$playerTwoScore),snakeFood(),$playerOneScore.css("display","block"),$playerTwoScore.css("display","block"),keyListener=window.addEventListener("keydown",function(){keyTracker(event,mySnake,yourSnake)}),gameClock=window.setInterval(function(){mySnake.commitDirection(),yourSnake.commitDirection(),mySnake.move(),yourSnake.move()},gameSpeed);break;case"onlinePlay":beginMatchMaking()}}function startOnlineGame(){host?(mySnake=new Snake(myPlayerName,"blue",[250,251,252],$playerOneScore),yourSnake=new Snake(opponentName,"red",[436,437,438],$playerTwoScore),snakeFood(),keyListener=window.addEventListener("keydown",function(){keyTracker(event,mySnake)})):(yourSnake=new Snake(opponentName,"red",[250,251,252],$playerTwoScore),mySnake=new Snake(myPlayerName,"blue",[436,437,438],$playerOneScore),keyListener=window.addEventListener("keydown",function(){keyTracker(event,yourSnake)})),tl.play(),gameClock=window.setInterval(function(){mySnake.commitDirection(),yourSnake.commitDirection(),mySnake.move(),yourSnake.move()},gameSpeed),$playerOneScore.css("display","block"),$playerTwoScore.css("display","block")}function updateOpponent(){var a={channel:opponentChannel,message:{action:"move",opponentDirection:mySnake.intendedDirection,opponentSnakeArray:mySnake.trailArray,opponentColor:mySnake.color,opponentScore:mySnake.score}};pubnub.publish(a)}function resetGame(){"onlinePlay"===playType&&pubnub.unsubscribeAll(),pubnub=void 0,host=!1,lookingForGame=!1,firstRun=!0,myPlayerName=void 0,potentialHostName=void 0,potentialChannel=void 0,opponentName=void 0,opponentChannel=void 0,mySnake=void 0,yourSnake=void 0,gameClock=void 0,keyListener=void 0,food=void 0,grid.map(function(a){a.occupied=!1,a.reverseIt()}),$playerOneScore.text(0).css("left","45%").css("display","none"),$playerTwoScore.text(0).css("display","none")}function declareWinner(a){var b,c;"single"===playType?(b=mySnake,c="You scored "+b.score+" points!"):(b=mySnake===a?yourSnake:mySnake,c="Wins! With "+b.score+" points."),console.log("winning snake",b),$("#winner").text(b.name),$("#gameSummary").text(c),tl.play()}function Cube(a){this.cubeID=a,this.color="#000",this.occupied=!1,this.element=$("#grid #"+a),this.animateIt=function(a){this.element.css("background-color",a),this.occupied=!0,this.color=a},this.reverseIt=function(){this.element.removeAttr("style"),this.occupied=!1}}function keyTracker(a){var b=a.keyCode;switch(b){case 37:"Right"===mySnake.actualDirection?console.log("Snake Bounce blocked"):(mySnake.intendedDirection="Left","onlinePlay"===playType&&updateOpponent());break;case 38:"Down"===mySnake.actualDirection?console.log("Snake Bounce blocked"):(mySnake.intendedDirection="Up","onlinePlay"===playType&&updateOpponent());break;case 39:"Left"===mySnake.actualDirection?console.log("Snake Bounce blocked"):(mySnake.intendedDirection="Right","onlinePlay"===playType&&updateOpponent());break;case 40:"Up"===mySnake.actualDirection?console.log("Snake Bounce blocked"):(mySnake.intendedDirection="Down","onlinePlay"===playType&&updateOpponent())}if("localMultiplayer"===playType)switch(b){case 65:"Right"===yourSnake.actualDirection?console.log("Snake Bounce blocked"):yourSnake.intendedDirection="Left";break;case 87:"Down"===yourSnake.actualDirection?console.log("Snake Bounce blocked"):yourSnake.intendedDirection="Up";break;case 68:"Left"===yourSnake.actualDirection?console.log("Snake Bounce blocked"):yourSnake.intendedDirection="Right";break;case 83:"Up"===yourSnake.actualDirection?console.log("Snake Bounce blocked"):yourSnake.intendedDirection="Down"}}function randomColor(){var a="#"+Math.floor(16777215*Math.random()).toString(16);if(7===a.length)return a;for(;a.length<7;)a+="0";return a}function snakeFood(a,b){if(host){for(food=Math.floor(Math.random()*cubeCount);isCollision("",food);)console.log("Collision Loop Initiated"),console.log("Changing Food"),food=Math.floor(Math.random()*cubeCount);var c=randomColor();if(grid[food].animateIt(c),grid[food].occupied=!1,"onlinePlay"===playType){var d={channel:opponentChannel,message:{action:"food",hostFoodPosition:food,hostFoodColor:c}};pubnub.publish(d,function(){})}}else food=a,grid[food].animateIt(b),grid[food].occupied=!1}function Snake(a,b,c,d){this.name=a,this.score=0,this.color=b,this.trailArray=c,this.position=c[0],this.intendedDirection="Right",this.actualDirection="Right",this.scoreBoard=d,this.commitDirection=function(){this.actualDirection=this.intendedDirection},this.move=function(){switch(this.actualDirection){case"Left":(this.position-1)%31!==0?this.position-=1:this.position+=30;break;case"Right":this.position%31!==0?this.position+=1:this.position-=30;break;case"Up":this.position+=this.position>31?-31:744;break;case"Down":this.position+=this.position<cubeCount-30?31:-744}isCollision(this.name,this.position)?(console.log("Game is over"),console.log("Losing Snake",this),clearInterval(gameClock),this.loserFlash()):this.trail()},this.trail=function(){if(this.trailArray.unshift(this.position),this.position===food)this.score++,this.color=grid[food].color,this.scoreBoard.text(this.score),host&&snakeFood();else{grid[this.position].animateIt(this.color);var a=this.trailArray.pop();a>=0&&grid[a].reverseIt()}},this.lagCorrect=function(a,b,c){this.score!==c&&this.updateScore(c),this.color!==b&&"blue"!==this.color&&"red"!==this.color&&(this.color=b),this.trailArray[0]!==a[0]&&(this.trailArray.map(function(a){grid[a].reverseIt()}),this.trailArray=a,this.position=a[0],this.trailArray.map(function(a){grid[a].animateIt(this.color)},this))},this.updateScore=function(a){this.score=a,this.scoreBoard.text(this.score)},this.loserFlash=function(){var a=this,b=window.setInterval(function(){a.trailArray.map(function(b){var c="white"===grid[b].color?a.color:"white";grid[b].animateIt(c)},a)},100);setTimeout(function(){clearInterval(b),declareWinner(a),resetGame()},1e3)}}function isCollision(a,b){return b==food?!1:grid[b].occupied===!0?(console.log(a+" has collided"),console.log("collision at: "+b),!0):!1}function beginMatchMaking(){var a=PubNub.generateUUID();pubnub=new PubNub({uuid:a,publishKey:"pub-c-fe32255a-2d44-4996-84db-c7a1e52e7dfc",subscribeKey:"sub-c-2a5abf52-e339-11e6-8d2d-02ee2ddab7fe",presenceTimeout:5}),pubnub.addListener({status:function(a){"PNConnectedCategory"===a.category?firstRun?initializeMatch():host&&confirmMatch():"PNNNetworkUpCategory"===a.category?(notification("Reconnected to Internet"),setTimeout(function(){clearNotification()},200)):"PNNetworkDownCategory"===a.category?notification("Internet Connection Lost"):"PNNetworkIssuesCategory"===a.category?notification("Unexpected MultiPlayer Connection Loss"):"PNReconnectedCategory"===a.category&&(notification("Reconnected to Online MultiPlayer Services"),setTimeout(function(){clearNotification()},200))},message:function(a){networkMessageHandler(a)},presence:function(a){"timeout"===a.action&&a.uuid!==pubnub.getUUID()&&notification("Lost Connection to Opponent. They Have Timed Out.")}}),pubnub.subscribe({channels:["snake_lobby","match_making"],withPresence:!0})}function initializeMatch(){firstRun=!1;var a={name:myPlayerName};pubnub.setState({state:a,channels:["snake_lobby"]},function(){pubnub.hereNow({channels:["snake_lobby"],includeState:!0,includeUUIDs:!0},function(a,b){console.log("Lobby Status:"),console.log(b);var c=b.channels.snake_lobby;if(0===c.occupancy||(c.occupancy=1&&c.occupants[0].uuid===pubnub.getUUID()))notification("Waiting for an opponent"),console.log("No occupants. Switching to host"),host=!0,lookingForGame=!0;else{for(var d,e,f=0;f<c.occupants.length;f++)if(c.occupants[f].uuid!==pubnub.getUUID()){var g=c.occupants[f];d=g.uuid,e=g.state.name,opponentName=g.state.name,notification("Possible Opponent Found: "+e),console.log("Possible Host Found: "+e);break}console.log("Attempting HandShake"),host=!1;var h=Math.floor(100*Math.random()+1);opponentChannel=h;var i={channel:"match_making",message:{potentialHostID:d,potentialHostName:e,potentialChannel:h,guestName:myPlayerName}};pubnub.publish(i,function(){console.log("Publishing Potential Match"),pubnub.unsubscribeAll(),pubnub.subscribe({channels:[h],withPresence:!0})})}})})}function confirmMatch(){var a={channel:opponentChannel,message:{action:"hello"}};pubnub.publish(a,function(){console.log("Match Confirmed")})}function networkMessageHandler(a){switch(a.channel){case"match_making":lookingForGame&&a.message.potentialHostID===pubnub.getUUID()?(console.log("Opponent Message recieved"),opponentName=a.message.guestName,notification("Found Opponent: "+opponentName),opponentChannel=a.message.potentialChannel,pubnub.unsubscribeAll(),pubnub.subscribe({channels:[opponentChannel],withPresence:!0})):console.log(lookingForGame||a.message.potentialHostID!==pubnub.getUUID()?"MatchMaking message does not apply to me":"I am being addressed, but I am not looking for a game");break;case"snake_lobby":break;default:if("hello"===a.message.action)host?console.log("I'm the host and the Game is Established"):(console.log("I'm the guest and the Game is Established"),opponentChannel=a.channel),notification("Starting Match with "+opponentName),setTimeout(function(){clearNotification(),startOnlineGame()},1e3);else if("food"===a.message.action&&a.publisher!==pubnub.getUUID()){var b=a.message.hostFoodPosition,c=a.message.hostFoodColor;snakeFood(b,c)}else if("move"===a.message.action&&a.publisher!==pubnub.getUUID()){var d=a.message;yourSnake.intendedDirection=d.opponentDirection,yourSnake.lagCorrect(d.opponentSnakeArray,d.opponentColor,d.opponentScore)}}}var grid=[],$playerOneScore=$("#playerOneScore"),$playerTwoScore=$("#playerTwoScore"),$notificationMessage=$("#notification_message"),playType="single",cubeCount=775,gameSpeed=80,host=!1,lookingForGame=!1,firstRun=!0,myPlayerName,potentialHostName,potentialChannel,opponentName,opponentChannel,mySnake,yourSnake,gameClock,keyListener,food,pubnub;$(".playType").click(function(){$(".playType").removeClass("active"),$(this).addClass("active"),playType=$(this).data("game")});var $titleScreen=$("#title_screen"),$title=$("#title"),$subtitle=$("#subtitle"),$playButton=$("#playButton"),$playType=$(".playType"),$playerName=$("#playerName"),$finishScreen=$("#final_score"),$winnerTitle=$("#winner"),$winnerSubTitle=$("#gameSummary"),$finishButton=$("#finishButton"),tl=new TimelineMax;tl.add(TweenLite.to($titleScreen,.5,{opacity:1,display:"flex"},"intro")),tl.add(TweenLite.to($title,.25,{opacity:1},"intro")),tl.add(TweenLite.to($subtitle,.25,{opacity:1},"intro")),tl.add(TweenLite.to($playButton,.25,{opacity:1},"intro")),tl.add(TweenLite.to($playType,.25,{opacity:1},"intro")),tl.add(TweenLite.to($playerName,.25,{opacity:1},"intro")),tl.addPause("intro"),tl.add(TweenLite.to($titleScreen,.5,{opacity:0,display:"none"},"game start")),tl.addPause("game start"),tl.add(TweenLite.to($finishScreen,.5,{opacity:1,display:"flex"},"game finish")),tl.add(TweenLite.to($winnerTitle,.25,{opacity:1},"game finish")),tl.add(TweenLite.to($winnerSubTitle,.25,{opacity:1},"game finish")),tl.add(TweenLite.to($finishButton,.25,{opacity:1},"game finish")),tl.addPause("game finish");